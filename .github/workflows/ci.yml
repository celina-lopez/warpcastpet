name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgis/postgis:15-3.4
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        # Docker Hub image
        image: redis
        ports:
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      REDIS_URL: redis://localhost:6379/0
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/timetable_test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      JWT_SECRET: zikr3t
      JWT_ALGORITHM: HS256

    steps:
      - uses: actions/checkout@v4

      - name: Install libmagick++-dev
        run: sudo apt-get install -y libmagick++-dev

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Create DB
        run: bin/rails db:test:prepare

      - name: Precompile assets
        run: bin/rails assets:precompile

      - name: Run tests
        run: bundle exec rspec

      - name: Lint code for consistent style
        run: bin/rubocop -f github

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager
